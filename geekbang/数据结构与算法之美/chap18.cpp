#include <iostream>
#include <vector>

using namespace std;

// 散列函数
// 其应用十分广泛，最最最常见的莫过于支持随机访问的数组了
// 数组能支持随机访问是因为其下标的存在
// 可以看作是最简单的散列函数：hash(x) = x - 1
//
// 一个散列函数应当具有如下性质
//     1.散列函数计算得到的散列值是一个非负整数
//     2.如果key1 = key2，那么有hash(key1) = hash(key2) 
//     3.如果key1 ≠ key2, 那么有hash(key1) ≠ hash(key2) 
// 
// 但事实是3很难满足，当不同的key的散列值相同时，成为散列冲突
// 解决散列冲突的方法有：开放寻址法、链表法
//
//
// 文中提到了Word等文本编辑软件中拼写检查功能的实现方式
// 有些简单粗暴的过于离谱了
// 常用英文单词约有20w个，假设平均每个单词10个字母，即每个单词占用10B内存空间
// 那么20w个单词大约有20w*10B = 2*10^6*10B ≈ 2*2^20*10B ≈ 2^24B = 16MB 
// 因而将这20w个单词保存到散列表里
// 当用户输入某个英文单词的时候，查表，若查到则说明拼写正确
// 否则可能拼写有误，给予提示
//
//
// 用散列表是Trie不香嘛？

int main()
{
    return 0;
}

